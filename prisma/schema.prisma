// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["strictUndefinedChecks"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  login String
  password String
  version Int
  createdAt DateTime
  updatedAt DateTime
}

model Artist {
  id String @id @default(uuid())
  name String
  grammy Boolean
  albums Album[]
  tracks Track[]
  favorite Favorite? @relation(fields: [favoriteId], references: [id])
  favoriteId String? 
}

model Album {
  id String @id @default(uuid())
  name String
  year Int
  artist Artist? @relation(fields: [artistId], references: [id])
  artistId String?
  tracks Track[]
  favorite Favorite? @relation(fields: [favoriteId], references: [id])
  favoriteId String? 
}

model Track {
  id String @id @default(uuid())
  name String
  artist Artist? @relation(fields: [artistId], references: [id])
  artistId String?
  album Album? @relation(fields: [albumId], references: [id])
  albumId String?
  duration Int
  favorite Favorite? @relation(fields: [favoriteId], references: [id])
  favoriteId String? 
}

model Favorite {
  id String @id @default(uuid())
  tracks Track[]
  albums Album[]
  artists Artist[]
}
